@model Auctioneer.Presentation.Models.Account.AccountMyAuctionsViewModel
@using Auctioneer.Logic.Auctions
@using Lang = Auctioneer.Resources.Account.MyAuctions;

@{
	ViewBag.Title = "MyAuctions";
}

@section head
{
	<link rel="stylesheet" href="~/Content/Libraries/Chosen/chosen.min.css" />
}

<h1>@Lang.Header</h1>

<main class="my-auctions">
	
	@{ Html.RenderPartial("MyAuctions.FilteringOptions"); }
	
	@if(Model.Auctions.Any())
	{
		using(Html.BeginForm(actionName: "DeleteAuctions"))
		{
			@Html.AntiForgeryToken()
			@Html.Hidden("queryString", Request.Url.Query)
			
			<table class="table table-hover">
				<tr>
					<th>
						<input type="checkbox" id="select-all" />
					</th>
					<th class="title">
						@Html.DisplayNameFor(x => x.Auctions.First().Title)
					</th>
					<th class="category">
						@Html.DisplayNameFor(x => x.Auctions.First().CategoryName)
					</th>
					<th class="time">
						@Html.DisplayNameFor(x => x.Auctions.First().TimeTillEnd)
					</th>
					<th class="price">
						@Html.DisplayNameFor(x => x.Auctions.First().BuyoutPrice)
					</th>
					<th class="price">
						@Html.DisplayNameFor(x => x.Auctions.First().BestOffer)
					</th>
				</tr>

				@foreach(var auction in Model.Auctions)
				{
					<tr>
						<td>
							@Html.CheckBox("ids", value: auction.Id, disabled: !auction.CanBeRemoved)
						</td>
						<td class="title">
							@Html.ActionLinkWithSlug(auction.Title, controllerName: "Auction", actionName: "Show", routeValues: new
							{
								id = auction.Id,
							})
						</td>
						<td class="category">
							@Html.ActionLinkWithSlug(auction.CategoryName, controllerName: "Category", actionName: "Index",
							                         routeValues: new
							                         {
								                         id = auction.CategoryId,
							                         })
						</td>
						<td class="time">
							@if(auction.Status == AuctionStatus.Active)
							{
								@Html.DisplayFor(x => auction.TimeTillEnd)
							}
							else
							{
								@Html.DisplayFor(x => auction.Status)
							}
						</td>
						<td class="price">
							@Html.DisplayFor(x => auction.BuyoutPrice)
						</td>
						<td class="price">
							@if(auction.BestOffer != null)
							{
								@Html.DisplayFor(x => auction.BestOffer)
							}
							else
							{
								@Html.Raw(Lang.NoOffer)
							}
						</td>
					</tr>
				}
			</table>

			<div class="selected-items-control-panel">
				<button type="submit" class="btn btn-link">@Lang.RemoveSelected</button>
			</div>
		}

		<div class="pagination-box">
			<span class="page-text">@Lang.PageNumber</span>

			@Html.PagedListPager(Model.Auctions, page => Url.ActionWithCurrentParameters(routeValues: new { page }),
			                     new PagedListRenderOptions
			                     {
			                        MaximumPageNumbersToDisplay = 7
			                     })
		</div>
	}
	else
	{
		<p class="results-not-found">@Lang.NoResultsFound</p>
	}
</main>

@section scripts
{
	<script src="~/Content/Libraries/Chosen/chosen.jquery.min.js"></script>

	<script>
		$(function()
		{
			$("#status").chosen(
			{
				placeholder_text_multiple: "@Lang.StatusFilterNotSelectedText",
				inherit_select_classes   : true
			});

			var selectAllCheckbox = $("input#select-all");
			var enabledCheckboxes = $("input#ids").filter(":enabled");
			var form              = enabledCheckboxes.first().closest("form");

			selectAllCheckbox.on("change", function()
			{
				enabledCheckboxes.prop("checked", this.checked);
			});

			form.on("change", "input#ids", function()
			{
				var anyChecked = Array.prototype.some.call(enabledCheckboxes, function(c) { return c.checked; });
				if(!anyChecked)
				{
					selectAllCheckbox.prop("checked", false);
				}
			});
		});
	</script>
}
